================================================================================
          GitHub Actions 计算器 - CI/CD 实验项目
================================================================================

欢迎使用 GitHub Actions 实验项目！

📦 项目已创建完成，包含：
  ✅ Python 计算器源代码（100% 测试覆盖率）
  ✅ 4 个 GitHub Actions 工作流
  ✅ 完整的文档（中文）
  ✅ 实验手册和快速入门指南

================================================================================
🚀 快速开始（3 个步骤）
================================================================================

步骤 1: 查看项目结构
--------------------
  查看文件列表：
    Windows: dir
    Linux/Mac: ls -la

步骤 2: 阅读文档
--------------------
  建议阅读顺序：
    1. README.md - 项目总览
    2. QUICKSTART.md - 5分钟快速开始
    3. LAB_MANUAL.md - 完整实验手册（2-3小时）

步骤 3: 初始化并推送到 GitHub
--------------------
  A. 在 GitHub 上创建新仓库
  
  B. 初始化 Git（选择一种方式）：
     
     方式 1 - 使用脚本（推荐）：
       Windows: init_git.bat
       Linux/Mac: bash init_git.sh
     
     方式 2 - 手动执行：
       git init
       git add .
       git commit -m "Initial commit"
       git remote add origin https://github.com/YOUR_USERNAME/REPO_NAME.git
       git branch -M main
       git push -u origin main

  C. 推送后访问 GitHub 仓库，点击 "Actions" 标签查看工作流

================================================================================
📚 文档说明
================================================================================

README.md
  - 项目完整说明
  - 功能特性介绍
  - 使用指南和开发指南

QUICKSTART.md
  - 5 分钟快速开始
  - 3 个快速实践任务
  - 常用命令参考

LAB_MANUAL.md
  - 详细的实验教程（9 个章节）
  - 7 个实践任务
  - 高级主题和最佳实践
  - 常见问题解答

PROJECT_SUMMARY.md
  - 项目创建总结
  - 测试验证结果
  - 工作流详情

================================================================================
🧪 本地测试
================================================================================

1. 创建虚拟环境：
   python -m venv venv

2. 激活虚拟环境：
   Windows: venv\Scripts\activate
   Linux/Mac: source venv/bin/activate

3. 安装依赖：
   pip install -r requirements-dev.txt
   pip install -e .

4. 运行测试：
   pytest tests/ -v
   pytest tests/ --cov=calculator --cov-report=html

================================================================================
🎯 GitHub Actions 工作流
================================================================================

本项目包含 4 个工作流：

1. ci.yml - 持续集成
   触发：推送到 main/develop，PR
   功能：代码检查、测试、构建

2. release.yml - 自动发布
   触发：推送 tag (v*.*.*)
   功能：创建 Release、构建包

3. matrix.yml - 多环境测试
   触发：推送到 main，PR，每周一定时
   功能：14 个环境组合测试

4. scheduled.yml - 定时任务
   触发：每天和每周定时
   功能：健康检查、依赖检查

================================================================================
💡 学习路径
================================================================================

初学者（1 小时）：
  1. 阅读 README.md
  2. 完成 QUICKSTART.md
  3. 触发第一个 CI 工作流

进阶（2-3 小时）：
  1. 学习 LAB_MANUAL.md
  2. 完成 7 个实验任务
  3. 探索不同工作流

专家（5+ 小时）：
  1. 完成扩展练习
  2. 自定义工作流
  3. 应用到自己项目

================================================================================
❓ 常见问题
================================================================================

Q: 测试失败？
A: 运行 pytest tests/ -vv 查看详细信息

Q: GitHub Actions 没触发？
A: 检查 .github/workflows/ 文件和仓库 Actions 设置

Q: 需要帮助？
A: 查看 LAB_MANUAL.md 第七部分"常见问题"

================================================================================
📞 支持
================================================================================

问题或建议：
  - 提交 Issue
  - 查看文档
  - 创建 Pull Request

================================================================================
🎉 准备好了吗？
================================================================================

现在您可以：
  1. 查看 README.md 了解项目
  2. 运行 pytest tests/ -v 验证本地环境
  3. 推送到 GitHub 开始学习 GitHub Actions

祝您学习愉快！ ��

================================================================================
